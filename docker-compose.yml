# Base Compose for local development with safe defaults.
# Secrets are injected at runtime via env_file; images remain generic.

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: elderly-app
    ports:
      - "8000:8000"
      - "5173:5173"
    # Inject local env without baking it into the image
    env_file:
      - .env
    environment:
      # Non-secret defaults (override in .env if needed)
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_URL: ${APP_URL:-http://localhost:8000}
      VITE_HOST: ${VITE_HOST:-0.0.0.0}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      MAIL_HOST: ${MAIL_HOST:-mailhog}
      MAIL_PORT: ${MAIL_PORT:-1025}
    # Keep runtime writable paths minimal; code is baked into the image
    volumes:
      - app-storage:/var/www/html/storage
      - app-public:/var/www/html/public
    depends_on:
      - mysql
      - redis
      - mailhog
    entrypoint: ["/usr/local/bin/entrypoint.sh"]
    command: ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]
    # command: ["bash", "-lc", "php artisan serve --host=0.0.0.0 --port=8000"]
    healthcheck:
      test: ["CMD-SHELL", "/usr/local/bin/app-healthcheck.sh"]
      interval: 15s
      timeout: 5s
      retries: 8
      start_period: 30s

  mysql:
    image: mariadb:10.11
    container_name: elderly-mysql
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD:-root_password}
      MARIADB_DATABASE: ${DB_DATABASE:-elderly_daycare}
      MARIADB_USER: ${DB_USERNAME:-elderly}
      MARIADB_PASSWORD: ${DB_PASSWORD:-elderly_secret}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    command: ["mysqld", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -p${MARIADB_ROOT_PASSWORD} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 20s

  redis:
    image: redis:7.4
    container_name: elderly-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 15s

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: elderly-mailhog
    ports:
      - "8025:8025" # Web UI
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8025"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 15s

volumes:
  mysql-data:
  app-storage:
  app-public:

